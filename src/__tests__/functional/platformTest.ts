// Complete platform functional test
import { FunctionalTester } from '../utils/functionalTester';

export async function runPlatformTest() {
  const tester = new FunctionalTester();
  
  try {
    console.log('üöÄ Iniciando teste abrangente da plataforma SoLabs...\n');
    
    const suites = await tester.runCompleteTest();
    const report = tester.generateReport(suites);
    
    console.log(report);
    
    // Also return structured data for programmatic use
    return {
      success: true,
      suites,
      summary: {
        totalTests: suites.reduce((sum, suite) => sum + suite.summary.total, 0),
        totalPassed: suites.reduce((sum, suite) => sum + suite.summary.passed, 0),
        totalFailed: suites.reduce((sum, suite) => sum + suite.summary.failed, 0),
        totalWarnings: suites.reduce((sum, suite) => sum + suite.summary.warnings, 0),
      }
    };
  } catch (error) {
    console.error('‚ùå Erro durante o teste da plataforma:', error);
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error'
    };
  }
}

// Manual test checklist for interactive verification
export const MANUAL_TEST_CHECKLIST = `
üîç CHECKLIST DE TESTE MANUAL - PLATAFORMA SOLABS
================================================================

üì± TESTE DE AUTENTICA√á√ÉO (5 usu√°rios)
‚ñ° Login como Super Admin (superadmin@solabs.com / super123)
‚ñ° Login como Admin Cliente A (admin@solabs.com / admin123)  
‚ñ° Login como Operador Cliente A (operador@solabs.com / operador123)
‚ñ° Login como Admin Cliente B (admin.beta@company.com / beta123)
‚ñ° Login como Operador Cliente B (user.beta@company.com / beta123)

üè† TESTE DA √ÅREA OPERACIONAL (Dashboard)
‚ñ° Visualizar lista de conversa√ß√µes
‚ñ° Usar filtros de status (open, pending, snoozed, resolved)
‚ñ° Testar busca em tempo real com debounce
‚ñ° Aplicar filtros avan√ßados
‚ñ° Selecionar conversa e visualizar mensagens
‚ñ° Enviar mensagem no composer
‚ñ° Atribuir agente/equipe a conversa
‚ñ° Aplicar/remover labels
‚ñ° Testar responsividade m√≥vel

üîß TESTE DA √ÅREA ADMINISTRATIVA (Super Admin)
‚ñ° Acessar /admin (deve funcionar apenas para super_admin)
‚ñ° Gerenciar Clientes:
  - Criar novo cliente
  - Editar cliente existente  
  - Ativar/desativar cliente
  - Buscar clientes
‚ñ° Gerenciar Agentes:
  - Criar novo agente
  - Editar agente
  - Excluir agente
  - Atribuir a inboxes
‚ñ° Gerenciar Inboxes:
  - Criar inbox WhatsApp (wizard)
  - Criar inbox Facebook (wizard)
  - Criar inbox Instagram (wizard)
  - Editar configura√ß√µes
  - Gerenciar membros
‚ñ° Gerenciar Equipes:
  - Criar equipe (wizard)
  - Adicionar/remover membros
  - Configurar auto-atribui√ß√£o
‚ñ° Gerenciar Labels:
  - Criar label com cor personalizada
  - Editar label existente
  - Excluir label
  - Testar aplica√ß√£o em conversas
‚ñ° Visualizar Logs de Auditoria:
  - Filtrar por data
  - Filtrar por a√ß√£o
  - Exportar dados
  - Visualizar logs por inbox

üõ°Ô∏è TESTE DE SEGURAN√áA E RBAC
‚ñ° Tentar acessar /admin como admin/user (deve redirecionar)
‚ñ° Verificar isolamento entre clientes
‚ñ° Validar filtros autom√°ticos por account_id
‚ñ° Testar logout e redirecionamento

‚ö° TESTE DE PERFORMANCE
‚ñ° Verificar carregamento inicial r√°pido
‚ñ° Testar scroll infinito em listas grandes
‚ñ° Verificar responsividade em mobile
‚ñ° Confirmar aus√™ncia de console.log em produ√ß√£o

================================================================
‚úÖ TODOS OS ITENS VERIFICADOS = PLATAFORMA FUNCIONAL
`;